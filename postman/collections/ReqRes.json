{
	"info": {
		"_postman_id": "4c5022e5-02e0-42a9-98ec-6aa3925c9e33",
		"name": "ReqRes",
		"description": "This is the documentation for Reqres API.\n\nThis is part of the Introduction to API testing with Postman Course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "6721853-4c5022e5-02e0-42a9-98ec-6aa3925c9e33"
	},
	"item": [
		{
			"name": "Register",
			"item": [
				{
					"name": "Register user success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1e09e20-818f-4a52-a408-149f91138e16",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate response contains an id\", function(){",
									"    let response = pm.response.json()",
									"    console.log(response.token)",
									"    pm.expect(response.token).to.exist",
									"    pm.environment.set(\"token\", response.token)",
									"    pm.globals.set(\"globalVariable\", \"randomString\")",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Server\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "468d8255-4857-4a79-8b84-583bfb365399",
								"exec": [
									"let tokenExists = pm.variables.get(\"token\");",
									"if (tokenExists != null){",
									"    pm.environment.unset(\"token\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3865e19d-30a2-4230-93a3-263640ae62b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-id",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a Valid User"
					},
					"response": [
						{
							"id": "331eb25d-982e-40e5-849a-7d01419cb8fe",
							"name": "Register user success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-id",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/register",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 30 Jan 2023 18:50:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "36"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Etag",
									"value": "W/\"24-4iP0za1geN2he+ohu8F0FhCjLks\""
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Report-To",
									"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Rk3tLx%2BAfHy9vv1IZDwXA%2BhRviqkiVlGcRHztU7a6zA7d%2FpRRTqJu4SC8NPaAfhKjgf4k1PIrpmng6BYcDn86%2FAq9qbJF6Xu1%2BKBvDoINkJxlEKh1oy6cIs8Gw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
								},
								{
									"key": "NEL",
									"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "791c64aa2cfa2825-DFW"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 4,\n    \"token\": \"QpwL5tke4Pnpja7X4\"\n}"
						}
					]
				},
				{
					"name": "register user without pwd_negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcc1b38f-9420-404c-b8cc-278125947a52",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 400ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"/* Functional Testing */",
									"pm.test(\"Response contains error => missing password\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0bc8f9e0-92c6-4168-9b93-8dc84e26625c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"sydney@fife\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": [
						{
							"id": "6699f11f-5590-4311-be7e-40aa451e9377",
							"name": "register user without pwd_negative",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"sydney@fife\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/register",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "register user without email_negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8be48a0b-158d-47e4-83f0-1d061586214a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 400ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"/* Functional Testing */",
									"pm.test(\"Response contains error => Missing email or username\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error).to.eql(\"Missing email or username\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "aec5391a-caab-4ad1-b518-d2f8b8bf8c2b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"sydney@fife\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": [
						{
							"id": "18202fb5-8f1a-444d-bea2-736c117d6319",
							"name": "register user without email_negative",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"sydney@fife\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/register",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"id": "b7007b10-9c34-451d-89a3-59ab8a87ca86"
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e49d3517-e923-4a09-aae1-c70397a2be03",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate and transfer token to environment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist",
									"    pm.environment.set(\"token\", jsonData.token)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "64cd5aac-7c1b-41aa-8755-d24da567e05a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "780ee1cd-f3f0-4e90-9876-7a72993b07bd",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate response contains an error with => Missing password\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9d7bd1b6-350c-472d-aa4f-68f1477f8cf9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with password is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd3abca9-8c30-4e7b-878d-a55eb9ed1a56",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate response contains an error with => Missing password\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ef475b5a-9d7f-487c-8884-49c0bced64f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"id": "3b9308a5-0ca7-4451-ae94-a5422ebfdd72"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get list of users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8647efc3-c447-4bde-9720-bd6a811fccc9",
								"exec": [
									"function getRandomInt(max) {",
									"  return Math.floor(Math.random() * max);",
									"}",
									"",
									"let randomNumber = getRandomInt(12)",
									"pm.environment.set(\"userId\", randomNumber)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f682d132-74ea-4c99-a8bd-779bf7105942",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/users?per_page=12",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "per_page",
									"value": "12"
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4dc432f-6e8f-4405-9a48-06d9afc381f5",
								"exec": [
									"const schema = {",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"default\": {},",
									"    \"title\": \"Root Schema\",",
									"    \"required\": [",
									"        \"data\",",
									"        \"support\"",
									"    ],",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The data Schema\",",
									"            \"required\": [",
									"                \"id\",",
									"                \"email\",",
									"                \"first_name\",",
									"                \"last_name\",",
									"                \"avatar\"",
									"            ],",
									"            \"properties\": {",
									"                \"id\": {",
									"                    \"type\": \"integer\",",
									"                    \"default\": 0,",
									"                    \"title\": \"The id Schema\",",
									"                    \"examples\": [",
									"                        5",
									"                    ]",
									"                },",
									"                \"email\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The email Schema\",",
									"                    \"examples\": [",
									"                        \"charles.morris@reqres.in\"",
									"                    ]",
									"                },",
									"                \"first_name\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The first_name Schema\",",
									"                    \"examples\": [",
									"                        \"Charles\"",
									"                    ]",
									"                },",
									"                \"last_name\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The last_name Schema\",",
									"                    \"examples\": [",
									"                        \"Morris\"",
									"                    ]",
									"                },",
									"                \"avatar\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The avatar Schema\",",
									"                    \"examples\": [",
									"                        \"https://reqres.in/img/faces/5-image.jpg\"",
									"                    ]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"id\": 5,",
									"                \"email\": \"charles.morris@reqres.in\",",
									"                \"first_name\": \"Charles\",",
									"                \"last_name\": \"Morris\",",
									"                \"avatar\": \"https://reqres.in/img/faces/5-image.jpg\"",
									"            }]",
									"        },",
									"        \"support\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The support Schema\",",
									"            \"required\": [",
									"                \"url\",",
									"                \"text\"",
									"            ],",
									"            \"properties\": {",
									"                \"url\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The url Schema\",",
									"                    \"examples\": [",
									"                        \"https://reqres.in/#support-heading\"",
									"                    ]",
									"                },",
									"                \"text\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The text Schema\",",
									"                    \"examples\": [",
									"                        \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"                    ]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"url\": \"https://reqres.in/#support-heading\",",
									"                \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"            }]",
									"        }",
									"    },",
									"    \"examples\": [{",
									"        \"data\": {",
									"            \"id\": 5,",
									"            \"email\": \"charles.morris@reqres.in\",",
									"            \"first_name\": \"Charles\",",
									"            \"last_name\": \"Morris\",",
									"            \"avatar\": \"https://reqres.in/img/faces/5-image.jpg\"",
									"        },",
									"        \"support\": {",
									"            \"url\": \"https://reqres.in/#support-heading\",",
									"            \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"        }",
									"    }]",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate JSON Schema against response\", function(){",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f0db9d72-81a7-47ad-a87d-85d83d631c76",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single User Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ad29fd7-7250-4c43-8c9d-4921554c3761",
								"exec": [
									"const schema = {",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"default\": {},",
									"    \"title\": \"Root Schema\",",
									"    \"required\": [",
									"        \"data\",",
									"        \"support\"",
									"    ],",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The data Schema\",",
									"            \"required\": [",
									"                \"id\",",
									"                \"email\",",
									"                \"first_name\",",
									"                \"last_name\",",
									"                \"avatar\"",
									"            ],",
									"            \"properties\": {",
									"                \"id\": {",
									"                    \"type\": \"integer\",",
									"                    \"default\": 0,",
									"                    \"title\": \"The id Schema\",",
									"                    \"examples\": [",
									"                        5",
									"                    ]",
									"                },",
									"                \"email\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The email Schema\",",
									"                    \"examples\": [",
									"                        \"charles.morris@reqres.in\"",
									"                    ]",
									"                },",
									"                \"first_name\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The first_name Schema\",",
									"                    \"examples\": [",
									"                        \"Charles\"",
									"                    ]",
									"                },",
									"                \"last_name\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The last_name Schema\",",
									"                    \"examples\": [",
									"                        \"Morris\"",
									"                    ]",
									"                },",
									"                \"avatar\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The avatar Schema\",",
									"                    \"examples\": [",
									"                        \"https://reqres.in/img/faces/5-image.jpg\"",
									"                    ]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"id\": 5,",
									"                \"email\": \"charles.morris@reqres.in\",",
									"                \"first_name\": \"Charles\",",
									"                \"last_name\": \"Morris\",",
									"                \"avatar\": \"https://reqres.in/img/faces/5-image.jpg\"",
									"            }]",
									"        },",
									"        \"support\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The support Schema\",",
									"            \"required\": [",
									"                \"url\",",
									"                \"text\"",
									"            ],",
									"            \"properties\": {",
									"                \"url\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The url Schema\",",
									"                    \"examples\": [",
									"                        \"https://reqres.in/#support-heading\"",
									"                    ]",
									"                },",
									"                \"text\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The text Schema\",",
									"                    \"examples\": [",
									"                        \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"                    ]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"url\": \"https://reqres.in/#support-heading\",",
									"                \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"            }]",
									"        }",
									"    },",
									"    \"examples\": [{",
									"        \"data\": {",
									"            \"id\": 5,",
									"            \"email\": \"charles.morris@reqres.in\",",
									"            \"first_name\": \"Charles\",",
									"            \"last_name\": \"Morris\",",
									"            \"avatar\": \"https://reqres.in/img/faces/5-image.jpg\"",
									"        },",
									"        \"support\": {",
									"            \"url\": \"https://reqres.in/#support-heading\",",
									"            \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"        }",
									"    }]",
									"}",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9a0062b8-eeac-4f38-8183-95abf8f5c3a2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/users/13",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"users",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c858ffa-a559-49f0-96f9-39c585a04277",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transfer userId to environment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"userId\", jsonData.id)",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3159124e-4f4d-4683-a914-9456ebdd18f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c46ee010-7669-4eb0-a56c-cffd356d30cc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Validate username is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    var request = JSON.parse(pm.request.body.raw)",
									"    console.log(\"expected username: \" + request.name)",
									"    pm.expect(jsonData.name).to.eql(request.name);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9bb41db9-21bd-4bd0-946f-82c5088c28b2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus1\",\n    \"job\": \"zion resident\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8991e074-ca06-46e2-a09f-77f7340885c5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4c5f507d-0f89-4b51-80ed-0ea7f92b7e5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "7d937834-9f82-4289-bba9-d4aaa47cf8f9"
		}
	]
}